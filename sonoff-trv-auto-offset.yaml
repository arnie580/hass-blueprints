blueprint:
  name: Sonoff TRV Offset
  description: Automatically adjust the offset of the temperature sensor using an external sensor.
  domain: automation
  input:
#    climate_entity:
#      name: Sonoff TRV Entity
#      selector:
#        entity:
#          filter:
#            - domain: climate
#    offset_entity:
#      name: TRV Temp Offset Entity
#      selector:
#        entity:
#          filter:
#            - domain: number
    set_trv_value:
      name: Set External Temp Entity
      selector:
        entity:
          filter:
            - domain: number
    sensor_entity:
      name: External Temp Sensor
      selector:
        entity:
          filter:
            - domain: sensor
            - device_class: temperature
  
mode: single
max_exceeded: silent

variables:
  external_temp_sensor: !input 'sensor_entity'
  external_temp: "{{ states(external_temp_sensor) | round(1) }}"
  
#variables:
#  trv_entity: !input 'climate_entity'
#  temp_entity: !input 'sensor_entity'
#  offset_entity: !input 'offset_entity'
#  sensor_temp: "{{ states(temp_entity) | round(1) }}"
#  trv_temp: "{{ state_attr(trv_entity, 'current_temperature') | round(1) }}"
#  trv_offset: "{{ states(offset_entity)|float}}"
#  friendly_name: "{{ state_attr(trv_entity, 'friendly_name')}}"
#  new_offset: "{{ sensor_temp - (trv_temp - trv_offset) | round(1) }}"
  
trigger:
  - platform: state
    entity_id: !input 'sensor_entity'
   # for:
    #  seconds: 15

#  - platform: time_pattern
 #   minutes: "/5"

#condition:
#  condition: template
#  value_template: "{{ sensor_temp != trv_temp }}"

action:
  - action: number.set_value
    data:
      entity_id: !input 'set_trv_value'
      value: "{{ external_temp | round(1) }}"
  #    value: "{{ new_offset }}"
#  - service: mqtt.publish
  #  data_template:
  #    topic: "zigbee2mqtt/{{ friendly_name }}/set"
  #    payload: '{"local_temperature_calibration":{{ (sensor_temp - (trv_temp - trv_offset)) | round(1) }}}'
  - delay: 5
